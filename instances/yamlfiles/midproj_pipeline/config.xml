<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.37">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.80">
    <script>node (&quot;agent-node-label&quot;) {
    def DockerImage = &quot;midproj&quot;
    stage(&quot;git&quot;) { 
       git credentialsId: &apos;mycred&apos;,
       url: &apos;https://github.com/michalazarovitz/crud-application-using-flask-and-mysql.git&apos;
    }
            
    stage(&quot;build docker&quot;) {
        customImage = docker.build(&quot;michalazarovitz/midproj&quot;)
    }
    
    stage(&quot;test&quot;) {
        sh &apos;docker images&apos;
    }
    
    stage(&quot;push to Docker Hub&quot;) {
        withDockerRegistry(credentialsId: &apos;mycred&apos;) {
            customImage.push()
        }
    }

    stage(&quot;deploy&quot;) { // Deploy the app
        sh &quot;&quot;&quot;
        cd /home/ec2-user/
        ssh -o StrictHostKeyChecking=no -i Mid-proj.pem ubuntu@k8sipadress &lt;&lt;EOF
        kubectl create configmap mysqlconfig --from-literal=MYSQL_HOST=$MYSQL_HOST --from-literal MYSQL_USER=dev
        cd k8sfiles
        kubectl create secret generic db-pass --from-file=MYSQL_PWD
        kubectl apply -f /home/ubuntu/k8sfiles/deployment.yml
        exit
        EOF
        &quot;&quot;&quot;
    }
     stage(&apos;Slack it&apos;){
        slackSend color: &quot;#439FE0&quot;, message: &quot;Build Finished Successfully: ${env.JOB_NAME} ${env.BUILD_NUMBER}&quot;

    }

}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>